package server

const (
	normalArgPrefix               = "arg"
	normalResultPrefix            = "res"
	_ctx_                         = "ctx"
	_next_                        = "next"
	_service_                     = "svc"
	packageOS                     = "os"
	packageIO                     = "io"
	packageTesting                = "testing"
	endpointsFunc                 = "Endpoints"
	serviceMetricsStructName      = "metricsMiddleware"
	serviceLoggingStructName      = "loggingMiddleware"
	commonHTTPResponseEncoderName = "CommonHTTPResponseEncoder"
	middlewareTypeName            = "Middleware"
	packagePathGoKitTransportHTTP = "github.com/go-kit/kit/transport/http"
	serviceAlias                  = "service"
	packagePathHttp               = "net/http"
	packagePathContext            = "context"
	endpointsSetName              = "EndpointsSet"
	encodeRequestFunc             = "EncodeRequest"
	encodeResponseFunc            = "EncodeResponse"
	packagePathJson               = "encoding/json"
	packagePathTime               = "time"
	packagePathFmt                = "fmt"
	packagePathErrors             = "errors"
	packagePathStrconv            = "strconv"
	packageUUID                   = "github.com/seniorGolang/gokit/types/uuid"
	packageTypes                  = "github.com/seniorGolang/gokit/types"
	packagePPROF                  = "github.com/seniorGolang/gokit/pprof"
	packageGorillaMux             = "github.com/gorilla/mux"
	packagePathGoKitEndpoint      = "github.com/go-kit/kit/endpoint"
	packagePathGoKitMetrics       = "github.com/go-kit/kit/metrics"
	packageTrace                  = "github.com/seniorGolang/gokit/trace"
	packageKitPrometheus          = "github.com/go-kit/kit/metrics/prometheus"
	packageStdPrometheus          = "github.com/prometheus/client_golang/prometheus"
	packagePathPackageUtils       = "github.com/seniorGolang/gokit/utils"
	packagePathPackageJsonRPC     = "github.com/seniorGolang/gokit/jsonrpc"
	packagePathKitLog             = "github.com/seniorGolang/gokit/logger"
	packageFastHttp               = "github.com/valyala/fasthttp"
	packageKitServer              = "github.com/seniorGolang/gokit/server"
	packagePrometeusHandler       = "github.com/prometheus/client_golang/prometheus/promhttp"
	packageRsCors                 = "github.com/rs/cors"
	packageOpentracing            = "github.com/opentracing/opentracing-go"
	packageOpenZipkin             = "github.com/openzipkin/zipkin-go"
	packageOpenZipkinOpenTracing  = "github.com/openzipkin-contrib/zipkin-go-opentracing"
	packageJaegerConfig           = "github.com/uber/jaeger-client-go/config"
	packageJaegerMetrics          = "github.com/uber/jaeger-lib/metrics"
	packageZipkinHttp             = "github.com/openzipkin/zipkin-go/reporter/http"
	packageJaegerClient           = "github.com/uber/jaeger-client-go"
	packageJaegerlog              = "github.com/uber/jaeger-client-go/log"
)
